library(readr)
library(dplyr)
library(ppcor) # For partial correlation
# (a) Explanation of the concept of correlation
# Correlation measures the degree to which two variables, X and Y, change together.
# The correlation coefficient, typically denoted as ρ, ranges from -1 to 1:
# - A value of 1 indicates a perfect positive correlation,
# - A value of -1 indicates a perfect negative correlation,
# - A value of 0 indicates no correlation.
#
# Effect of Scaling:
# When variables are scaled by constants α1 and α2, the correlation is unaffected in magnitude but may change sign:
# ρW1W2 = cov(α1X, α2Y) / (sqrt(var(α1X)) * sqrt(var(α2Y)))
# This simplifies to:
# ρW1W2 = sgn(α1α2) * ρXY
# Thus, scaling does not change the inherent linear relationship but can alter its direction.
# (b) Explanation of Partial Correlation
# Partial correlation measures the relationship between two variables, X and Y, while controlling for a third variable Z.
# The formula is:
# ρXY|Z = (ρXY - ρXZ * ρZY) / sqrt((1 - ρ^2XZ) * (1 - ρ^2ZY))
#
# Scenarios for investigating partial correlation:
# 1. Study Hours, Grades, and IQ:
#    - X: Study Hours
#    - Y: Grades
#    - Z: IQ
#    Investigating how study hours correlate with grades while controlling for IQ.
#
# 2. Advertising Spend, Sales, and Market Size:
#    - X: Advertising Spend
#    - Y: Sales
#    - Z: Market Size
#    Analyzing the relationship between advertising spend and sales while accounting for market size.
#
# 3. Exercise, Weight Loss, and Diet:
#    - X: Exercise Hours
#    - Y: Weight Loss
#    - Z: Caloric Intake
#    Exploring the correlation between exercise and weight loss while controlling for caloric intake.
# (c) Does the property from part a hold for partial correlation?
# Yes, the property of correlation regarding scaling holds for partial correlation as well.
# Just like regular correlation, partial correlation is not affected by scaling of the variables.
# (d) Import the dataset weatherHistory.csv and perform the analyses
# Import the dataset
weather_data <- read_csv("weatherHistory.csv")
# Check the column names to avoid issues
print(colnames(weather_data))
# Select relevant features
selected_data <- weather_data %>%
  dplyr::select(`Temperature (C)`, `Apparent Temperature (C)`, Humidity)
# Compute pairwise correlation
pairwise_correlation <- cor(selected_data, use = "complete.obs")
print("Pairwise Correlation:")
print(pairwise_correlation)
# Compute partial correlations
partial_correlation_results <- list()
variables <- colnames(selected_data)
# Check for NA values in selected_data and remove rows with NA if necessary
selected_data <- na.omit(selected_data)
# Loop through each pair of variables to calculate partial correlations
for (i in 1:length(variables)) {
  for (j in (i + 1):length(variables)) {
    z_vars <- variables[-c(i, j)]
    # Check if z_vars is valid and non-empty
    if (length(z_vars) > 0) {
      tryCatch({
        partial_correlation <- pcor(selected_data[, c(variables[i], variables[j], z_vars)])$estimate[1, 2]
      }, error = function(e) {
        partial_correlation <- NA  # Handle any errors and set to NA
      })
    } else {
      # If no z_vars, just compute the correlation between the two variables
      partial_correlation <- cor(selected_data[, c(variables[i], variables[j])], use = "complete.obs")
    }
    partial_correlation_results[[paste(variables[i], variables[j], sep = "_")]] <- partial_correlation
  }
}
print("Partial Correlations:")
print(partial_correlation_results)
# Compute partial correlations
partial_correlation_results <- list()
variables <- colnames(selected_data)
# Loop through each pair of variables to calculate partial correlations
for (i in 1:length(variables)) {
  for (j in (i + 1):length(variables)) {
    z_vars <- variables[-c(i, j)]
    # Check if z_vars is valid and non-empty
    if (length(z_vars) > 0) {
      tryCatch({
        partial_correlation <- pcor(selected_data[, c(variables[i], variables[j], z_vars)])$estimate[1, 2]
      }, error = function(e) {
        partial_correlation <- NA  # Handle any errors and set to NA
      })
    } else {
      # If no z_vars, compute the regular correlation between the two variables
      partial_correlation <- cor(selected_data[, c(variables[i], variables[j])], use = "complete.obs")[1, 2]
    }
    # Only store valid results
    if (!is.na(partial_correlation) && !is.infinite(partial_correlation)) {
      partial_correlation_results[[paste(variables[i], variables[j], sep = "_")]] <- partial_correlation
    }
  }
}
# Print results
print("Partial Correlations:")
print(partial_correlation_results)
q()
# Interpretation of results
# The pairwise correlations will reveal direct relationships between temperature, apparent temperature, and humidity.
# A strong correlation indicates that as one variable increases, so does the other.
# If the partial correlation values differ significantly from the pairwise correlations, it suggests that the relationships
# are influenced by the third variable (humidity in this case).
# For example, if temperature and apparent temperature are highly correlated, but their partial correlation controlling for
# humidity is lower, it may indicate that humidity affects both measurements, acting as a confounder.