knitr::opts_chunk$set(echo = TRUE)
#options(contrasts = c("contr.sum", "contr.poly"))
require("ggplot2")
require("dplyr")
gapminder <- read.csv("gapminder.csv")
summary(gapminder)
gapminder %>%
ggplot(aes(x=year, y=lifeExp, colour=continent)) +
#geom_bar(position='dodge', stat='identity')
geom_line()
gapminder %>%
ggplot(aes(x=year, y=lifeExp, colour=continent)) +
#geom_bar(position='dodge', stat='identity')
geom_line()
knitr::kable(
gapminder %>%
group_by(continent, year) %>%
summarise_at(vars(lifeExp), list(Min = min, Med = median, Mean = mean, Max = max, Sd = sd)) %>%
data.frame()
)
gapminder %>%
group_by(continent, year) %>%
summarise(Mean_lifeExp= mean(lifeExp, na.rm = T), .groups = 'drop') %>%
ggplot(aes(x=year, y=Mean_lifeExp)) +
geom_ribbon(aes(ymin= Mean_lifeExp - 1, ymax = Mean_lifeExp + 1), fill = "grey70") +
geom_line() +
facet_grid(.~continent) +
theme(axis.text.x = element_text(angle=90)) +
ylim(0, NA)
gapminder %>%
group_by(continent, year) %>%
summarise(Mean_lifeExp= mean(lifeExp, na.rm = T), .groups = 'drop') %>%
ggplot(aes(x=year, y=Mean_lifeExp)) +
geom_ribbon(aes(ymin= Mean_lifeExp - 1, ymax = Mean_lifeExp + 1), fill = "grey70") +
geom_line() +
facet_grid(.~continent) +
theme(axis.text.x = element_text(angle=90)) +
ylim(0, NA)
weatherHistory <- read.csv("weatherHistory.csv")
head(weatherHistory)
weatherHistory %>%
group_by(Precip.Type) %>%
summarize(Count = n()) %>%
ggplot(aes(x=Precip.Type, y=Count)) +
geom_bar(stat='identity', position='dodge')
weatherHistory %>%
group_by(Summary) %>%
summarize(Count = n()) %>%
ggplot(aes(x=Summary, y=Count)) +
geom_bar(stat='identity', position='dodge') +
theme(axis.text.x = element_text(angle=90))
weatherHistory %>%
group_by(Daily.Summary) %>%
summarize(Count = n()) %>%
ggplot(aes(x=Daily.Summary, y=Count)) +
geom_bar(stat='identity', position='dodge')
weatherHistory %>%
ggplot(aes(Temperature..C.)) +
geom_histogram(aes(y = ..density..), fill = "white", color="black") +
stat_density(kernel = "gaussian", fill = NA, colour = "black")
weatherHistory %>%
ggplot(aes(Apparent.Temperature..C.)) +
geom_histogram(aes(y = ..density..), fill = "white", color="black") +
stat_density(kernel = "gaussian", fill = NA, colour = "black")
weatherHistory %>%
ggplot(aes(Humidity)) +
geom_histogram(aes(y = ..density..), fill = "white", color="black") +
stat_density(kernel = "gaussian", fill = NA, colour = "black")
weatherHistory %>%
ggplot(aes(Wind.Speed..km.h.)) +
geom_histogram(aes(y = ..density..), fill = "white", color="black") +
stat_density(kernel = "gaussian", fill = NA, colour = "black")
weatherHistory %>%
ggplot(aes(Visibility..km.)) +
geom_histogram(aes(y = ..density..), fill = "white", color="black") +
stat_density(kernel = "gaussian", fill = NA, colour = "black")
# weatherHistory %>%
#   group_by(Wind.Bearing..degrees.) %>%
#   summarize(Count = n()) %>%
#   ggplot(aes(x=Wind.Bearing..degrees., y=Count)) +
#   geom_bar(stat='identity', position='dodge') +
#   theme(axis.text.x = element_text(angle=90))
weatherHistory %>%
ggplot(aes(Wind.Bearing..degrees.)) +
geom_histogram(aes(y = ..density..), fill = "white", color="black") +
stat_density(kernel = "gaussian", fill = NA, colour = "black")
weatherHistory %>%
group_by(Loud.Cover) %>%
summarize(Count = n()) %>%
ggplot(aes(x=Loud.Cover, y=Count)) +
geom_bar(stat='identity', position='dodge') +
theme(axis.text.x = element_text(angle=90))
library(caret)
library(tidyr)
library(dplyr)
weatherHistory <- weatherHistory %>% select(-c("Formatted.Date", "Daily.Summary", "Loud.Cover"))
weatherHistory <- na.omit(weatherHistory) # Remove all NA
head(weatherHistory)
num_wH <- weatherHistory %>%
select(-c("Summary", "Precip.Type"))
num_stand_wH <- as.data.frame(sapply(num_wH, function(x) ((x-mean(x))/sd(x))))
qualitative_wH <- weatherHistory %>%
select(c("Summary", "Precip.Type")) #Omitted "Formatted.Date","Daily.Summary"
# PT <- factor(qualitative_wH$Precip.Type)
# PT <- as.data.frame(model.matrix(~ Precip.Type - 1, PT))
#
# FD <- factor(qualitative_wH$Summary)
# FD <- as.data.frame(model.matrix(~ f - Summary - 1, FD))
#head(merge(PT, FD))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(oh_weatherHistory)
d <- table(1:count(weatherHistory), weatherHistory$Precip.Type)
d <- table(1:count(weatherHistory$Precip.Type), weatherHistory$Precip.Type)
d <- table(1:nrow(weatherHistory), weatherHistory$Precip.Type)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(d)
q2 <- table(1:nrow(weatherHistory), weatherHistory$Summary)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q1 + q2)
q1 <- table(1:nrow(weatherHistory), weatherHistory$Precip.Type)
q2 <- table(1:nrow(weatherHistory), weatherHistory$Summary)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q1 + q2)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(merge(q1 + q2))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(merge(q1 , q2))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q1)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q2)
q1 <- data.frame(table(1:nrow(weatherHistory), weatherHistory$Precip.Type))
q2 <- data.frame(table(1:nrow(weatherHistory), weatherHistory$Summary))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q2)
q1 <- data.frame.as.frame.matrix(table(1:nrow(weatherHistory), weatherHistory$Precip.Type))
q1 <- as.data.frame.matrix(table(1:nrow(weatherHistory), weatherHistory$Precip.Type))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q2)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q1)
q1 <- as.data.frame.matrix(table(1:nrow(weatherHistory), weatherHistory$Precip.Type))
q2 <- as.data.frame.matrix(table(1:nrow(weatherHistory), weatherHistory$Summary))
q <- merge(q1, q2)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(rbind(q1,q2))
q1 <- table(1:nrow(weatherHistory), weatherHistory$Precip.Type) # as.data.frame.matrix(
q2 <- table(1:nrow(weatherHistory), weatherHistory$Summary)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(rbind(q1,q2))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q1)
nrow(q1)
nrow(q2)
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q1)
head(cbind(q1,q2))
q <- as.data.frame.matrix(cbind(q1, q2))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
head(q)
cleaned_wH <- cbind(num_stand_wH, q)
head(cleaned_wH)
test_wH <- cleaned_wH[,1:(nrow(cleaned_wH) * 0.25)]
test_wH <- cleaned_wH[1:(nrow(cleaned_wH) * 0.25),]
train_wH <- cleaned_wH[(nrow(cleaned_wH) * 0.3):nrow(cleaned_wH),]
head(test_wH)
wH_mod <- train_wH %>%
lm(Apparent.Temperature..C. ~ rain + snow + Pressure..millibars. + Humidity + Temperature..C. + Wind.Speed..km.h.)
wH_mod <- train_wH %>%
lm(Apparent.Temperature..C. ~ rain + snow + Pressure..millibars. + Humidity + Temperature..C. + Wind.Speed..km.h.)
test_wH <- data.frame(cleaned_wH[1:(nrow(cleaned_wH) * 0.25),])
train_wH <-data.frame(cleaned_wH[(nrow(cleaned_wH) * 0.3):nrow(cleaned_wH),])
wH_mod <- train_wH %>%
lm(Apparent.Temperature..C. ~ rain + snow + Pressure..millibars. + Humidity + Temperature..C. + Wind.Speed..km.h.)
wH_mod <- train_wH %>%
lm(Apparent.Temperature..C. ~ rain + snow + Pressure..millibars. + Humidity + Temperature..C. + Wind.Speed..km.h., .)
summary.aov(wH_mod)
summary(wH_mod)
sample <- sample(c(T, F), nrow(cleaned_wH), replace=T, prob=c(0.75, 0.25))
test_wH <- cleaned_wH[!sample,]
train_wH <- cleaned_wH[sample,]
wH_mod <- train_wH %>%
lm(Apparent.Temperature..C. ~ rain + snow + Pressure..millibars. + Humidity + Temperature..C. + Wind.Speed..km.h., .)
summary.aov(wH_mod)
summary(wH_mod)
knitr::opts_chunk$set(echo = TRUE)
#options(contrasts = c("contr.sum", "contr.poly"))
require("ggplot2")
require("dplyr")
wH_lm <- train_wH %>%
lm(Apparent.Temperature..C. ~ rain + snow + Pressure..millibars. + Humidity + Temperature..C. + Wind.Speed..km.h., .)
summary.aov(wH_mod)
summary(wH_mod)
num_wH <- weatherHistory %>%
select(-c("Summary", "Precip.Type"))
num_stand_wH <- as.data.frame(sapply(num_wH, function(x) ((x-mean(x))/sd(x))))
qualitative_wH <- weatherHistory %>%
select(c("Precip.Type")) #Omitted "Formatted.Date","Daily.Summary"
# PT <- factor(qualitative_wH$Precip.Type)
# PT <- as.data.frame(model.matrix(~ Precip.Type - 1, PT))
#
# FD <- factor(qualitative_wH$Summary)
# FD <- as.data.frame(model.matrix(~ f - Summary - 1, FD))
q1 <- table(1:nrow(weatherHistory), weatherHistory$Precip.Type) # as.data.frame.matrix(
q2 <- table(1:nrow(weatherHistory), weatherHistory$Summary)
q <- as.data.frame.matrix(cbind(q1, q2))
#head(merge(PT, FD))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
cleaned_wH <- cbind(num_stand_wH, q)
head(cleaned_wH)
sample <- sample(c(T, F), nrow(cleaned_wH), replace=T, prob=c(0.75, 0.25))
test_wH <- cleaned_wH[!sample,]
train_wH <- cleaned_wH[sample,]
num_wH <- weatherHistory %>%
select(-c("Summary", "Precip.Type"))
num_stand_wH <- as.data.frame(sapply(num_wH, function(x) ((x-mean(x))/sd(x))))
qualitative_wH <- weatherHistory %>%
select(c("Summary", "Precip.Type")) #Omitted "Formatted.Date","Daily.Summary"
# PT <- factor(qualitative_wH$Precip.Type)
# PT <- as.data.frame(model.matrix(~ Precip.Type - 1, PT))
#
# FD <- factor(qualitative_wH$Summary)
# FD <- as.data.frame(model.matrix(~ f - Summary - 1, FD))
q1 <- table(1:nrow(weatherHistory), weatherHistory$Precip.Type) # as.data.frame.matrix(
q2 <- table(1:nrow(weatherHistory), weatherHistory$Summary)
q <- as.data.frame.matrix(cbind(q1, q2))
#head(merge(PT, FD))
#oh_weatherHistory <- dummyVars("~ .", data = qualitative_wH)
#oh_weatherHistory <- data.frame(predict(oh_weatherHistory, newdata = qualitative_wH))
#head(num_stand_wH)
cleaned_wH <- cbind(num_stand_wH, q)
head(cleaned_wH)
sample <- sample(c(T, F), nrow(cleaned_wH), replace=T, prob=c(0.75, 0.25))
test_wH <- cleaned_wH[!sample,]
train_wH <- cleaned_wH[sample,]
y_test_pred <- predict(wH_lm, newdata = test_wH)
y_train_pred <- predict(wH_lm, newdata = train_wH)
head(y_test_pred)
y_test_true <- test_wH["Apparent.Temperature..C.",]
y_test_pred <- predict(wH_lm, newdata = test_wH)
y_train_true <- train_wH["Apparent.Temperature..C.",]
y_train_pred <- predict(wH_lm, newdata = train_wH)
rmse_test <- rmse(y_test_true, y_test_pred)
rmse_test <- RMSE(y_test_true, y_test_pred)
library(Metrics)
rmse <- function(actual, predicted) {
return(sqrt(3))
}
rmse_test <- rmse(y_test_true, y_test_pred)
